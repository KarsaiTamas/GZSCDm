class StarcraftPlayer : DoomPlayer 
{
	int marauderSlow;
	bool isMarauderSlowed;
	Default
	{
	Player.StartItem "StarcraftRevolver";
	Player.StartItem "Fist";
	Player.StartItem "Clip", 100;
	Player.StartItem "ReaperGranade",5;
	Player.StartItem "ReaperGranadeAmmo",5;
	Player.StartItem "SpiderMineWeapon",1;
	Player.StartItem "SpiderMineAmmo",3;
	Player.StartItem "RevolverLimitedToken",6;
	Player.StartItem "RevolverBulletCaseToken",6;
	Player.StartItem "YamatoAmmoToken",2;
	Player.StartItem "SniperAmmoToken",10;
	Player.StartItem "HudExecuteToken",1;

	Player.WeaponSlot 1, "Fist", "Chainsaw", "ReaperGranade", "SpiderMineWeapon";
	Player.WeaponSlot 2, "StarcraftRevolver";
	Player.WeaponSlot 3, "ReaperPistols", "HercFlashWelder";
	Player.WeaponSlot 4, "MarineWeapon", "GhostSniper", "SpectreRifle";
	Player.WeaponSlot 5, "MarauderRocketL";
	Player.WeaponSlot 6, "PlasmaRifle", "FlameThrowerWeapon";
	DamageFactor "PlayerFlame",0;
	DamageFactor "PlayerReaperGranade",0.6;
	DamageFactor "PlayerYamatoShot",0;
	Health 150;
	}
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		isMarauderSlowed=false;
		marauderSlow=0;
	}
	
	override void Tick()
	{
		super.Tick();
		if(marauderSlow>0)
		{
			marauderSlow--;
			if(marauderSlow<=0)
			{
				self.speed*=2;
				isMarauderSlowed=false;
			}
			//Console.Printf("slow remaining: %d",marauderSlow);
		}
	}
  states
  {
  
	Spawn:
	PLAY A -1;
	Loop;
	
	See:
	PLAY ABCD 4 ;
	Loop;
	
	Missile:
	PLAY E 12;
	Goto Spawn;
	
	Melee:
	PLAY F 6 BRIGHT;
	Goto Missile;
  
	Pain:
    PLAY G 4 ;
    PLAY G 4 A_Pain;
    Goto Spawn;
  
	Pain.StunGrenade:
	PLAY G 0 A_Pain;
	PLAY G 18 ACS_NamedExecuteAlways("StunHit",0);
	Goto Spawn;
	
	Death:
	PLAY A 0;
	PLAY A 0 A_PlayerScream;
	PLAY A 0 A_TakeInventory("IsSlowedDownToken",1);
	PLAY A 0 A_TakeInventory("SlowToken",30); 
	PLAY A 0 A_TakeInventory("PlayerSnipeTokenSlow",1);
	PLAY A 0 A_TakeInventory("PlayerSnipeCheckToken",1);
	PLAY A 0 A_TakeInventory("PlayerSnipeToken",1);
	PLAY A 0 A_NoBlocking;
	PLAY HIJKLMN 10;
	PLAY N -1;
	stop;
  XDeath:
	PLAY A 0;
	PLAY A 0 A_XScream;
	PLAY A 0 A_TakeInventory("IsSlowedDownToken",1);
	PLAY A 0 A_TakeInventory("SlowToken",30);
	PLAY A 0 A_TakeInventory("PlayerSnipeTokenSlow",1);
	PLAY A 0 A_TakeInventory("PlayerSnipeCheckToken",1);
	PLAY A 0 A_TakeInventory("PlayerSnipeToken",1);
	PLAY A 0 A_NoBlocking;
	PLAY OPQRSTUVW 10;
	PLAY W -1;
	stop;
  
  }
}